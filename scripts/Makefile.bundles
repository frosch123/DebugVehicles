################################################################
# Binary bundle targets
################################################################

# Bundle directory
$(DIR_NAME): $(MAKEFILE_DEP) $(BUNDLE_FILES)
	$(_E) "[BUNDLE]"
	$(_E) "[ASSEMBLING] $@"
	$(_V) if [ -e $@ ]; then rm -rf $@; fi
	$(_V) mkdir $@
	$(_V) -for i in $(BUNDLE_FILES); do cp $(CP_FLAGS) $$i $@; done

%.tar: %
	$(_E) "[TAR] $@"
	$(_V) $(TAR) $(TAR_FLAGS) $@ $(basename $@)

bundle_tar: $(TAR_FILENAME)
bundle_zip: $(ZIP_FILENAME)
%.zip: $(DIR_NAME)
	$(_E) "[ZIP] $@"
	$(_V) $(ZIP) $(ZIP_FLAGS) $@ $< >/dev/null
bundle_bzip: $(BZIP_FILENAME)
%.tar.bz2: %.tar
	$(_E) "[BZIP] $@"
	$(_V) $(BZIP) $(BZIP_FLAGS) $^
bundle_gzip: $(GZIP_FILENAME)
# gzip has no option -k, so we cat the tar to keep it
%.tar.gz: %.tar
	$(_E) "[GZIP] $@"
	$(_V) cat $^ | $(GZIP) $(GZIP_FLAGS) > $@
bundle_xz: $(XZ_FILENAME)
%.tar.xz: %.tar
	$(_E) "[XZ] $@"
	$(_V) $(XZ) $(XZ_FLAGS) $^

################################################################
# Install targets
################################################################
install: $(DIR_NAME)
	$(_E) "[INSTALL] to $(INSTALL_DIR)"
	$(_V) install -d $(INSTALL_DIR)
	$(_V) install -m644 $(TARGET_FILES) $(INSTALL_DIR)
ifndef DO_NOT_INSTALL_DOCS
ifneq ($(filter-out $(LICENSE_FILE) $(CHANGELOG_FILE),$(DOC_FILES)),)
	$(_E) [INSTALL] docs to $(DOCDIR)
	$(_V) install -d $(DOCDIR)
	$(_V) install -m644 $(filter-out $(LICENSE_FILE) $(CHANGELOG_FILE),$(DOC_FILES)) $(DOCDIR)
endif
endif
ifndef DO_NOT_INSTALL_LICENSE
ifneq ($(LICENSE_FILE),)
	$(_E) [INSTALL] license to $(DOCDIR)
	$(_V) install -d $(DOCDIR)
	$(_V) install -m644 $(LICENSE_FILE) $(DOCDIR)
endif
endif
ifndef DO_NOT_INSTALL_CHANGELOG
ifneq ($(CHANGELOG_FILE),)
	$(_E) [INSTALL] changelog to $(DOCDIR)
	$(_V) install -d $(DOCDIR)
	$(_V) install -m644 $(CHANGELOG_FILE) $(DOCDIR)
endif
endif


################################################################
# Bundle source targets
################################################################

md5: $(MD5_FILENAME)

# OSX md5 programm generates slightly different output. Aleviate that by throwing some sed on all output:
%.md5: $(TARGET_FILES)
	$(_E) "[MD5] $@"
	$(_V) $(MD5SUM) $(TARGET_FILES) | sed "s/  / /;s/ /  /" > $@

# OSX md5 programm generates slightly different output. Aleviate that by throwing some sed on all output:
check: $(MD5_FILENAME)
	$(_V) if [ -f $(MD5_SRC_FILENAME) ]; then echo "[CHECKING md5sums]"; else echo "Required file '$(MD5_SRC_FILENAME)' which to test against not found!"; false; fi
	$(_V) if [ -z "`diff $(MD5_FILENAME) $(MD5_SRC_FILENAME)`" ]; then echo "No differences in md5sums"; else echo "Differences in md5sums:"; echo "`diff $(MD5_FILENAME) $(MD5_SRC_FILENAME)`"; false; fi

bundle_src: bundle_gsrc
	$(_E) "Target '$@' is depreciated, it depends on '$<', other types are: 'bundle_bsrc' (tar.bz2), 'bundle_gsrc' (tar.gz), 'bundle_xsrc' (tar.xz), 'bundle_zsrc' (zip)"
bundle_bsrc: $(DIR_NAME_SRC).tar.bz2
bundle_gsrc: $(DIR_NAME_SRC).tar.gz
bundle_xsrc: $(DIR_NAME_SRC).tar.xz
bundle_zsrc: $(DIR_NAME_SRC).zip

# Addition to config for tar releases
Makefile.dist: $(REV_FILENAME) $(SCRIPT_DIR)/Makefile.bundles
	$(_V) echo '################################################################' > $@
	$(_V) echo '# Definitions needed for tar releases' >> $@
	$(_V) echo '# This part is automatically generated' >> $@
	$(_V) echo '################################################################' >> $@
	$(_V) echo 'REPO_REVISION := $(REPO_REVISION)' >> $@
	$(_V) echo 'REPO_BRANCH := $(REPO_BRANCH)' >> $@
	$(_V) echo 'REPO_MODIFIED := $(REPO_MODIFIED)' >> $@
	$(_V) echo 'REPO_TAGS    := $(REPO_TAGS)'    >> $@
	$(_V) echo 'HG := :' >> $@
	$(_V) echo 'DIST_DIRS := $(VPATH)' >> $@
	$(_V) echo 'DEP_CHECK_TYPE := normal' >> $@
	$(_V) echo 'FROM_TAR := 1' >> $@

ifneq ("$(strip $(HG))",":")
$(DIR_NAME_SRC): $(shell $(HG) status -m -a -d -c -n) $(REV_FILENAME) $(MD5_SRC_FILENAME) Makefile.dist
	$(_E) "[ASSEMBLING] $(DIR_NAME_SRC)"
	$(_V)-rm -rf $@
	$(_V) for i in $(shell $(HG) status -m -a -d -c -n | grep -v -E '$(RE_FILES_NO_SRC_BUNDLE)'); do mkdir -p $@/`dirname $$i`; cp $(CP_FLAGS) $$i $@/$$i; done
	$(_V) cp $(CP_FLAGS) $(MD5_SRC_FILENAME) $(DIR_NAME_SRC)
	$(_V) cat Makefile.dist >> $(DIR_NAME_SRC)/Makefile.local
else
$(DIR_NAME_SRC):
	$(_E) "Source releases can only be made from a hg checkout."
	$(_V) false
endif

bundle_tarsrc: $(DIR_NAME_SRC).tar

$(INSTALL_DIR):
	$(_E) "[WRITING]"
	$(_V) mkdir -p $(INSTALL_DIR)
